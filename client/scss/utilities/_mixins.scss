@mixin respond-to($point, $condition: min-width) {
  // Ensure media query isn't in quotes
  $condition: unquote($condition);
  // Check global breakpoints first
  @if map-has-key($breakpoints, $point) {
    @media ($condition: map-get($breakpoints, $point)) {
      @content;
    }
    // Failing that, check local tweakpoints
  } @else if map-has-key($tweakpoints, $point) {
    @media ($condition: map-get($tweakpoints, $point)) {
      @content;
    }
  } @else {
    @warn 'Could not find `#{$point}` in both local ($tweakpoints) and global ($breakpoints) contexts. Media block omitted.';
  }
}

@mixin respond-between($point1, $point2) {
  // Check global breakpoints first
  @if map-has-key($breakpoints, $point1) and map-has-key($breakpoints, $point2) {
    @media (min-width: map-get($breakpoints, $point1)) and (max-width: map-get($breakpoints, $point2) - 1) {
      @content;
    }
    // Failing that, check local tweakpoints
  } @else if map-has-key($tweakpoints, $point) {
    @media (min-width: map-get($tweakpoints, $point1)) and (max-width: map-get($tweakpoints, $point2) - 1) {
      @content;
    }
  } @else {
    @warn 'Could not find `#{$point1}` and/or `#{$point2}` in both local ($tweakpoints) and global ($breakpoints) contexts. Media block omitted.';
  }
}

@mixin container-query($size-key, $columns) {
  $size: map-get($grid-config, $size-key);
  $respond: map-get($size, 'respond');

  @if (length($respond) > 1) {
    @include respond-between(nth($respond, 1), nth($respond, 2)) {
      [class*='grid__cell--#{$size-key}#{$columns}'] & {
        @content;
      }
    }
  } @else {
    @include respond-to($respond) {
      [class*='grid__cell--#{$size-key}#{$columns}'] & {
        @content;
      }
    }
  }
}

@mixin clearfix {
  &:before,
  &:after {
    content: '';
    display: table;
  }

  &:after {
    clear: both;
  }
}

@mixin plain-list() {
  list-style: none;
  margin: 0;
  padding: 0;
}
