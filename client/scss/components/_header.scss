//* @define header; weak

$tweakpoints: (
  'header-medium': 820px,
  'small': map-get($breakpoints, 'small')
);

.header {
  padding-top: 0.8rem;
}

.header__upper {
  border-bottom: 1px solid color('keyline-grey');
  position: relative;
}

.header__inner {
  display: flex;
  padding-bottom: 0.8rem;
  align-items: center;
}

.header__burger {
  flex: 1;

  .no-js & {
    display: none;
  }

  @include respond-to('header-medium') {
    display: none;
  }
}

.header__burger-trigger {
  position: relative;
  width: 1.3rem;
  height: 1rem;
  appearance: none;
  background: color('transparent');
  border: 0;

  // TODO: replace with svg-sprite icon
  span {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 2px;
    background: color('black');
    transition: transform 400ms ease;
    transform-origin: center center;

    &:nth-child(2) {
      top: 50%;
    }

    &:last-child {
      top: 100%;
    }

    .header--is-burger-open & {
      top: 0.5rem;

      &:first-child {
        transform: rotate(45deg);
      }

      &:nth-child(2) {
        display: none;
      }

      &:last-child {
        transform: rotate(-45deg);
        bottom: auto;
      }
    }
  }
}

.header__brand {
  display: flex;
  justify-content: center;
  margin-right: 1.5rem;

  @include respond-to('header-medium') {
    border-right: 1px solid color('keyline-grey');
    flex-basis: auto;
    width: 10rem;
  }
}

.header__logo {
  width: 100%;
  max-width: 8rem;

  @include respond-to('header-medium') {
    margin-right: 1.5rem;
    width: auto;
  }
}

.header__nav {
  display: none;
  margin-top: 0.5rem;
  position: absolute;
  top: 100%;
  left: map-get($container-padding, 'small');
  right: map-get($container-padding, 'small');

  @include respond-to('medium') {
    left: map-get($container-padding, 'medium');
    right: map-get($container-padding, 'medium');
  }

  .no-js &,
  .header--is-burger-open & {
    display: block;
  }

  @include respond-to('header-medium') {
    position: static;
    display: block;
    margin-top: 0;
  }
}

.header__search {
  flex: 1;
  display: flex;
  justify-content: flex-end;

}

.header__form {
  position: relative;
}

.header__input-wrap {
  position: absolute;
  right: 100%;
  margin-right: -1px;
  top: 0;
  bottom: 0;
  width: 10rem;
  display: none;

  .no-js &,
  .header__form--is-active & {
    display: block;
  }

  @include respond-to('medium') {
    width: 20rem;
  }

  .no-js & {
    position: static;
    width: auto;
  }

  &:before {
    width: 5rem;
    pointer-events: none;
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    right: 100%;
    background: linear-gradient(95deg, transparent, #fff);
  }
}

.header__input {
  @include font('WB7');
  width: 100%;
  border: 1px solid color('keyline-grey');
  padding: calc(1rem - 1px);

  &:focus {
    outline: 0;
    border-color: color('yellow');
  }
}

// TODO: update to use nested .icon when that PR's in
.header__icon {
  width: 1.3em;
  height: 1.3em;

  @include respond-to('header-medium') {
    margin-right: 1em;
  }
}

.header__use {
  fill: color('currentColor');
  transition: fill 200ms ease;
}

.header__button {
  @include font('WB7');
  display: flex;
  align-items: center;
  padding: 1rem 0 1rem 1.5rem;
  appearance: none;
  border: 0;
  background: color('transparent');
  transition: color 200ms ease;

  &:hover,
  &:focus {
    outline: 0;
    color: color('action-green-1');
  }

  @include respond-to('header-medium') {
    border-left: 1px solid color('keyline-grey');
  }
}

.header__button-text {
  @include respond-between('small', 'header-medium') {
    @include visuallyhidden();
  }
}

.header__list {
  @include plain-list();
  @include font('WB7');
  margin-left: -0.3rem;

  @include respond-to('header-medium') {
    display: flex;
  }
}

.header__item {
  border-bottom: 1px solid color('keyline-grey');

  @include respond-to('header-medium') {
    border-bottom: 0;
    margin-right: 1.5rem;
  }

  @include respond-to('large') {
    margin-right: 2rem;
  }
}

.header__link {
  padding: 2rem 0.3rem;
  display: block;
  text-decoration: none;
  position: relative;
  transition: color 400ms ease;

  @include respond-to('header-medium') {
    padding-top: 1rem;
    padding-bottom: 1rem;
  }

  &:hover,
  &:focus {
    color: color('action-green-1');
  }

  .header__item--is-current & {
    @include respond-to('header-medium') {
      &:after {
        content: '';
        position: absolute;
        bottom: 1rem;
        height: 0.6rem;
        left: 0;
        right: 0;
        background: color('yellow');
        z-index: -1;
      }
    }
  }
}

