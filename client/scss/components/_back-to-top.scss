$linkDimension: $spacing-unit * 7;

$tweakpoints: (
  'back-to-top-xlarge': map-get($breakpoints, 'xlarge') + map-get($gutter-width, 'xlarge') + $linkDimension
);

.back-to-top {
  position: fixed;
  bottom: 1vh;
  right: #{map-get($container-padding, 'small')};
  z-index: 2;
  backface-visibility: hidden; // prevents flicker as page is scrolled
  width: $linkDimension;
  height: $linkDimension;
  border-radius: 50%;
  background: color('black');

  @include respond-to('medium') {
    right: #{map-get($container-padding, 'medium')};
  }

  @include respond-to('large') {
    right: #{map-get($container-padding, 'large')};
  }

  @include respond-to('xlarge') {
    right: 0;
    margin-right: calc(((100vw - #{$container-width-max}) / 2) + #{map-get($container-padding, 'xlarge')});
  }

  .enhanced & {
    transition: opacity 0.25s, transform 0.25s;
    transform: scale(0) translateX($linkDimension / 2);

    @include respond-to('back-to-top-xlarge') {
      transform: scale(0) translateX(map-get($gutter-width, 'xlarge') + $linkDimension);
    }
    opacity: 0;
  }
}

.back-to-top--visible {
  .enhanced & {
    opacity: 0.7;
    transform: scale(1) translateX($linkDimension / 2);

    @include respond-to('back-to-top-xlarge') {
      transform: scale(1) translateX(map-get($gutter-width, 'xlarge') + $linkDimension);
    }
  }
}

.back-to-top__text {
  @include visually-hidden;
}
