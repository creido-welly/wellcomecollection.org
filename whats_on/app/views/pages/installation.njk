{% extends 'layout/default.njk' %}
{% block pageMeta %}
  {% set metaContent = {
    type: 'website',
    title: installation.title,
    description: installation.promo.caption,
    url: pageConfig.canonicalUri
  } %}
  {% component 'open-graph', { pageConfig: pageConfig, metaContent: metaContent } %}
  {% component 'twitter-card', { pageConfig: pageConfig, metaContent: metaContent } %}
  <meta name="description" content="{{ installation.description | prismicAsText | safe | striptags }}" />
{% endblock %}

{% block body %}
  {# {% set jsonLdExhibition = exhibition | objectAssign({safeDescription: exhibition.description | safe | striptags}) %} #}

  <script type="application/ld+json">
    {# {{ jsonLdExhibition | jsonLd('exhibitionLd') | safe }} #}
  </script>
  <div class="row relative">
    <div class="flush-container-left absolute {{ {s:2} | spacingClasses({margin: ['top', 'bottom']}) }}">
      {% componentJsx 'Tags', { tags: tags } %}
    </div>

    <div class="exhibition-hero">
      {% componentJsx 'Picture', {
        images: installation.featuredImageList,
        extraClasses: 'exhibition-hero__picture',
        isFull: true
      }%}

      <div class="exhibition-hero__copy {{ {l:10} | spacingClasses({margin: ['bottom']}) }}">
        <div class="is-hidden-l is-hidden-xl">
          {% component 'wobbly-edge', {background: 'white'} %}
        </div>

        <div class="container">
          <div class="grid">
            <div class="{{ {s:12, m:10, shiftM:1, l:12, xl:12} | gridClasses }}">
              <div class="bg-white inline-block exhibition-hero__box {{ {l:4} | spacingClasses({'padding': ['right', 'left']}) }} {{ {s:4} | spacingClasses({'padding': ['top', 'bottom']}) }} rounded-diagonal">
                <div class="flex flex--v-center flex--h-space-between">
                  <span class="{{ {s:'HNM4', m:'HNM3'} | fontClasses }} {{ {s: 6} | spacingClasses({margin: ['right']}) }}">Free admission</span>
                  <span class="flex flex--v-center {{ {s:'HNM4'} | fontClasses }}">
                    {% set dateMessageAndColor = {start: installation.start, end: installation.end} | formatDateRangeWithMessage %}
                    <span class="{{ {s:1} | spacingClasses({margin: ['right']}) }} flex flex--v-center">
                    {% set statusColor = 'icon--' + dateMessageAndColor.color %}
                    {% icon 'status_indicator', null, [statusColor, 'icon--match-text'] %}
                  </span>
                  <span>{{ dateMessageAndColor.text }}</span>
                </span>
                </div>
                <h1 class="{{ {s:'WB5', m:'WB4', xl:'WB3'} | fontClasses }}">{{ installation.title }}</h1>
                <span class="{{ {s:'HNL4', m:'HNL3', l:'HNL3', xl:'HNL2'} | fontClasses }}">
                {% if installation.end %}
                  <time datetime="{{ installation.start }}">{{ installation.start | formatDate }}</time>&ndash;<time datetime="{{ installation.end }}">{{ installation.end | formatDate }}</time>
                {% endif %}
              </span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>


    <div class="is-hidden-s is-hidden-m">
      {% component 'wobbly-edge', {background: 'white', intensity: 30} %}
    </div>
  </div>

  {% if installation.contributors.length > 0 %}
  <div class="row {{ {s:5} | spacingClasses({margin: ['top']}) }}">
    <div class="container">
      <div class="grid">
        <div class="{{ {s:12, m:10, shiftM:1, l:12, xl:12} | gridClasses }}">
          <h2 class="{{ {s: 'WB6', l: 'WB5'} | fontClasses }} {{ {s: 4} | spacingClasses({padding: ['bottom']}) }}">
            In collaboration with
          </h2>
        </div>
        {% for contributor in installation.contributors %}
          <div class="{{ {s:12, m:10, shiftM:1, l:6, xl:6} | gridClasses }} {{ {s:4} | spacingClasses({margin: ['bottom']}) }}">
            {% if contributor.contributor.contributorType === 'people' %}
              {% component 'author', {
                name: contributor.contributor.name,
                image: contributor.contributor.image.contentUrl,
                description: (contributor.description | prismicAsHtml) if contributor.description,
                twitterHandle: contributor.contributor.twitterHandle
              } %}
            {% endif %}
          </div>
        {% endfor %}
      </div>
    </div>
  </div>
  {% endif %}

  <div class="row {{ {s:5} | spacingClasses({margin: ['top']}) }}">
    <div class="container">
      <div class="grid">
        <div class="{{ {s:12, m:10, shiftM:1, l:7, xl:7} | gridClasses }} {{ {s:4} | spacingClasses({margin: ['bottom']}) }}">
          {{ installation.description | prismicAsHtml | safe }}
        </div>
        <div class="{{ {s:12, m:10, shiftM:1, l:5, xl:5} | gridClasses }}">
          <hr class="divider divider--keyline divider--pumice {{ {s:2} | spacingClasses({margin: ['bottom']}) }}" />
          <div class="drawer js-show-hide"
                data-track-action="opening-times-drawer">
            <button class="plain-button no-padding pointer js-show-hide-trigger font-green {{ {s:3} | spacingClasses({margin: ['bottom']}) }} {{ {s:'HNM4'} | fontClasses }}">
              <span class="flex flex--v-center">{% icon 'plus', null, ['icon--green', 'margin-right-s1'] %}Opening times</span>
            </button>
            <div class="drawer__body js-show-hide-drawer">
              {% componentJsx 'OpeningHours', {id: 'exhibition-page', extraClasses: 'opening-hours--light opening-hours--compressed'} %}
            </div>
          </div>
          <hr class="divider divider--keyline divider--pumice {{ {s:2} | spacingClasses({margin: ['bottom']}) }}" />


          <h2 class="{{ {s:'HNM4'} | fontClasses }} {{ {s:3} | spacingClasses({margin: ['bottom']}) }}">Access information</h2>
          {% if installation.place !== null %}
            <div class="flex {{ {s:1} | spacingClasses({margin: ['top', 'bottom']}) }} {{ {s:'HNL4'} | fontClasses}}">
              <div class="{{ {s:1} | spacingClasses({margin:['right']}) }}">{% icon 'lifts' %}</div>
            <p class="no-margin">This installation is on level {{ installation.place.level }}</p>
            </div>
          {% endif %}
          <div class="flex {{ {s:1} | spacingClasses({margin: ['top', 'bottom']}) }} {{ {s:'HNL4'} | fontClasses}}">
            <div class="{{ {s:1} | spacingClasses({margin:['right']}) }}">{% icon 'a11y' %}</div>
            <p class="no-margin">Step-free access is available to all floors of the building</p>
          </div>
          <div class="flex {{ {s:1} | spacingClasses({margin: ['top', 'bottom']}) }} {{ {s:'HNL4'} | fontClasses}}">
            <div class="{{ {s:1} | spacingClasses({margin:['right']}) }}">{% icon 'a11y_visual' %}</div>
            <p class="no-margin">Large print guides, transcripts and magnifiers are available in the gallery</p>
          </div>

          <hr class="divider divider--pumice divider--keyline {{ {s:4} | spacingClasses({margin: ['bottom']}) }}" />
        </div>
      </div>
    </div>


{% endblock %}
