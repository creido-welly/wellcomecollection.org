{% extends 'layout/default.njk' %}

{% block pageMeta %}
  {% component 'open-graph', { pageConfig: pageConfig, article: article } %}
  {% component 'twitter-card', { pageConfig: pageConfig, article: article } %}
  <meta name="description" content="{{ article.description | safe | striptags }}" />
{% endblock %}

{% block body %}

{% block seriesNavigation %}
  {% for series in article.series %}
    {% if series.commissionedLength %}
      {% set asyncContentEndpoint = '/series-nav/' + series.url + '?current=' + article.url %}
      {% component 'async', { endpoint: asyncContentEndpoint, component: 'series-nav' } %}
    {% endif %}
  {% endfor %}
{% endblock %}

{% set commissionedSeries = article.series | getCommissionedSeries %}
{% set seriesTitle = article.series | getSeriesTitle %}
{% if commissionedSeries %}
  {% set seriesTitle = null %}
{% endif %}

<script type="application/ld+json">
  {{ article | jsonLd('contentLd') | safe }}
</script>
<article>
  <article itemscope itemtype="http://schema.org/Article">
  {% set pageDescriptionMeta = {value: (article.eventFormat | title) + '<br />' + article.when[0]} %}

  {% componentV2 'page-description', {
    intro: seriesTitle,
    title: article.headline,
    meta: pageDescriptionMeta,
    lead: true},
    {icon: article.contentType | getIconForContentType}
  %}

  {% set mainMediaData = {
    contentType: article.contentType,
    positionInSeries: article.positionInSeries,
    series: commissionedSeries
  } %}

  {% componentV2 'main-media', article.mainMedia | getPrincipleMainMedia, {'full': true, 'comic': article.contentType === 'comic'}, mainMediaData %}

  <div class="row row--cream">
    <div class="container">
      <div class="{{ {s:6, m:6, l:6} | spacingClasses({padding: ['top']}) }}">
        {% componentV2 'divider', null, {'pumice': true, 'keyline': true} %}
      </div>
    </div>
  </div>

  <div class="row row--cream {{ {s:8, m:8, l:8} | spacingClasses({padding: ['top', 'bottom']}) }} ">
    <div class="container">
      <div class="grid grid--no-gutters">
        <div class="{{ {s: 12, m: 10, shiftM: 1, l: 7, xl: 6, shiftXl: 1} | gridClasses }}">
          <div class="article" itemprop="articleBody">
            {% block articleBody %}
              {% component 'article-body', {articleBody: article.bodyParts, contentType: article.contentType} %}
            {% endblock %}

            {% if article.contributors.length > 0 %}
              <h2 class="{{ {s: 'HNM4', m: 'HNM4', l: 'HNM4'} | fontClasses }}"><b>Contributors</b></h2>
              {% for contributor in article.contributors %}
                {% component 'author', {
                  name: contributor.name,
                  twitterHandle: contributor.twitterHandle,
                  modifiers: ['border-left'],
                  description: contributor.description,
                  image: contributor.image
                } %}
              {% endfor %}
            {% endif %}

            {% componentV2 'divider', null, {'stub': true, 'black': true}, {extraClasses: [{s:4, m:4, l:4} | spacingClasses({margin: ['top']})]} %}

            {% if article.tags.length > 0 %}
              {% component 'tags', { tags: article.tags } %}
            {% endif %}
          </div>
          {% for accessStatement in article.accessStatements %}
            <div class="access-statement {{ {s:6, m:6, l:6} | spacingClasses({padding: ['top']}) }}">
              <div class="flex">
                <div class="{{ {s:6, m:6, l:6} | spacingClasses({margin: ['right']}) }}">
                  {% if accessStatement.title === ' British Sign Language tour' %}
                    {% icon 'a11y/sign_language', "British Sign Language tour", ['icon--huge'] %}
                  {% endif %}
                </div>
                <div>
                  {{ accessStatement.description | safe }}
                </div>
              </div>
            </div>
          {% endfor %}

          <div class="{{ {s:6, m:6, l:6} | spacingClasses({padding: ['top']}) }}">
            {% if (article.eventbriteId) %}
              <iframe id="eventbrite-iframe-{{ eventbriteId }}" src="/eventbrite-event-embed/{{ article.eventbriteId }}" frameborder="0" width="100%" vspace="0" hspace="0" marginheight="5" marginwidth="5" scrolling="auto" allowtransparency="true"></iframe>
              <script>
                (function() {
                  var iframe = document.getElementById('eventbrite-iframe-{{ eventbriteId }}');
                  iframe.addEventListener('load', function() {
                    iframe.height = iframe.contentWindow.document.body.scrollHeight;
                  });
                })();
              </script>
            {% endif %}
            <p>This event is <b>FREE</b>. <a href="https://wellcomecollection.org/visit-us/tickets">Find out more about events</a>.</p>
          </div>
        </div>
      </div>
    </div>
  </div>
</article>

{% block transporters %}
  {% for series in article.series %}
    {% if series.commissionedLength %}
      <div class="row {{ {s:10, m:10, l:10} | spacingClasses({padding: ['top']}) }} {{ {s:5, m:5, l:5} | spacingClasses({padding: ['bottom']}) }}">
        <div class="container digital-story-transporter">
          <div class="grid grid--no-gutters">
            <div class="{{ {s: 12, m: 10, shiftM: 1, l: 7, xl: 6, shiftXl: 1} | gridClasses }}">
              <div class="body-part body-part--full-width">
                <div class="wobbly-edge wobbly-edge--white wobbly-edge--small js-wobbly-edge" data-is-static="true"></div>
                {% set asyncContentEndpoint = '/series-transporter/' + series.url + '?current=' + article.url %}
                {% component 'async', { endpoint: asyncContentEndpoint, component: 'series-transporter', modifiers: '{"in-article": true}' } %}
              </div>
            </div>
          </div>
        </div>
      </div>
    {% endif %}
  {% endfor %}
{% endblock %}

{% endblock %}
