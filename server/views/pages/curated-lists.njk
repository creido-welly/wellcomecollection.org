{% extends 'layout/default.njk' %}

{% block pageMeta %}
  {% set description = curatedList.data.description | prismicAsText %}
  {% set metaContent = {
    type: 'website',
    title: pageConfig.title,
    image: promos.first().image.contentUrl,
    url: pageConfig.canonicalUri,
    description: description
  } %}
  {% component 'open-graph', { pageConfig: pageConfig, metaContent: metaContent } %}
  {% component 'twitter-card', { pageConfig: pageConfig, metaContent: metaContent } %}

  <meta name="description" content="{{ description }}" />
{% endblock %}

{% block body %}

  {% set listHeader = {
    name: 'Stories',
    htmlDescription: curatedList.data.description | prismicAsHtml
  } %}
  {% componentV2 'list-header', listHeader %}

  <div class="row bg-cream row--has-wobbly-background {{ {s:10} | spacingClasses({padding: ['top']}) }}">
    <div class="container">
      <div class="grid">
        <div class="{{ {s:12, m:12, l:12, xl:12} | gridClasses }}">
          {% componentJsx 'Promo', {
            sizes: '(min-width: 1420px) 812px, (min-width: 600px) 58.5vw, calc(100vw - 36px)',
            url: articles[0].url,
            contentType: articles[0].contentType,
            image: articles[0].promo.image,
            title: articles[0].headline,
            weight: 'featured',
            description: articles[0].promo.caption,
            series: articles[0].series,
            positionInSeries: articles[0].positionInSeries
          } %}
        </div>
      </div>
    </div>
    <div class="row__wobbly-background"></div>
    <div class="container">
      {% componentV2 'divider', null, {'keyline': true, 'pumice': true}, {extraClasses: [{s:3} | spacingClasses({margin: ['bottom']})]} %}
    </div>
    <div class="container container--scroll container--scroll-cream touch-scroll">
      <div class="grid grid--dividers grid--scroll grid--theme-4">
        {% for article in articles.slice(1, 5) %}
          <div class="grid__cell">
            {% componentJsx 'Promo', {
              sizes: '(min-width: 1340px) 282px, (min-width: 600px) calc(47.22vw - 37px), calc(75vw - 18px)',
              url: article.url,
              contentType: article.contentType,
              image: article.promo.image,
              title: article.headline,
              weight: article.weight,
              description: article.promo.caption,
              series: article.series,
              positionInSeries: article.positionInSeries
            } %}
          </div>
        {% endfor %}
      </div>
    </div>
  </div>

  {% for section in curatedList.data.section %}
    {% if section.slice_type === 'series' %}
      {% set asyncContentEndpoint = '/series-transporter/' + section.value.id %}
      {% component 'async', { endpoint: asyncContentEndpoint, component: 'series-transporter', modifiers: '{"in-explore": true}' } %}
    {% endif %}
  {% endfor %}

  {# Chronological #}
  {% componentJsx 'SectionHeader', {
    title: 'You may have missed',
    linkText: 'More articles',
    linkUrl: '/articles'
  } %}

  <div class="row {{ {s:4} | spacingClasses({padding: ['top']}) }} ">
    <div class="container container--scroll touch-scroll">
      <div class="grid grid--scroll grid--dividers grid--theme-6">
        {% for article in articles.slice(5, 11) %}
          <div class="grid__cell">
            {% componentJsx 'Promo', {
              sizes: '(min-width: 1420px) 386px, (min-width: 960px) calc(28.64vw - 15px), (min-width: 600px) calc(50vw - 54px), calc(75vw - 18px)',
              url: article.url,
              contentType: article.contentType,
              image: article.promo.image,
              title: article.headline,
              weight: article.weight,
              description: article.promo.caption,
              series: article.series,
              positionInSeries: article.positionInSeries
            } %}
          </div>
        {% endfor %}
      </div>
    </div>
  </div>

  <div class="container">
    {% componentJsx 'Divider', {
      extraClasses: [
        'divider--dashed',
        {s:3} | spacingClasses({margin: ['bottom', 'top']})
      ].join(' ')
    } %}
  </div>

{% endblock %}
