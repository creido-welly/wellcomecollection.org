{% extends 'layout/default.njk' %}

{% block pageMeta %}
  {% set metaContent = {
  type: 'website',
  title: event.title,
  image: event.featuredImage and event.featuredImage.contentUrl,
  url: pageConfig.canonicalUri
  } %}
  {% component 'open-graph', { pageConfig: pageConfig, metaContent: metaContent } %}
  {% component 'twitter-card', { pageConfig: pageConfig, metaContent: metaContent } %}
  <meta name="description" content="{{ event.description | safe | striptags }}" />
{% endblock %}

{% block body %}
<script type="application/ld+json">
  {{ event | jsonLd('eventLd') | safe }}
</script>

<div class="css-grid__container">
  <div class="css-grid">
    <div class="is-hidden-s is-hidden-m {{ ({s: 4} | spacingClasses({ margin: ['top'] })) }}">
      {% componentV2 'tags', tags %}
    </div>
  </div>

  {% if event.promo.image %}
    <div class="is-hidden-l is-hidden-xl css-grid__cell--main">
      <div class="absolute {{ {s:2} | spacingClasses({margin: ['top', 'bottom']}) }}">
        {% componentV2 'tags', tags %}
      </div>
    </div>
    <div class="is-hidden-l is-hidden-xl css-grid__cell--full">
      {% componentV2 'captioned-image', event.promo.image, {full: true}, {showCopyright: true} %}
    </div>
  {% endif %}

  <div class="css-grid {{ {l: 2} | spacingClasses({margin: ['top']}) }}">

    <div class="css-grid__cell--secondary">
      <div class="bg-cream rounded-diagonal {{ {s: 4} | spacingClasses({padding: ['top', 'bottom', 'left', 'right']}) }} relative {{ {s: -4, l: 0} | spacingClasses({margin: ['top']}) }}">
        <div class="{{ {s:'HNM4'} | fontClasses }}">
          <div class="flex">
            {% for interpretation in event.interpretations %}
              {# TODO: This is not very nice #}
              <span class="{{ {s: 1} | spacingClasses({margin: ['right']}) }}">{% icon interpretation.interpretationType.title | replace(' ', '_') | replace('-', '_') | lower %}</span>
            {% endfor %}
            <span>{{ event.format.title }}</span>
          </div>
        </div>

        <h1 class="{{- [
          {s:'WB5', m:'WB4', xl:'WB3'} | fontClasses,
          {s: 2} | spacingClasses({margin: ['top']}),
          {s: 1} | spacingClasses({margin: ['bottom']})
        ].join(' ') -}}">
          {{ event.title }}
        </h1>

        <div class="flex flex--v-center {{ {s:'HNM5'} | fontClasses }} {{ {s:3} | spacingClasses({margin: ['bottom']}) }}">
          <span class="{{ {s: 2} | spacingClasses({margin: ['right']}) }}">{% icon 'ticket' %}</span>
          <span class="caps {{ {s: 1} | spacingClasses({padding: ['right']}) }}">Free</span>
          {% if event.bookingType %}
            <span class="border-left-width-1 border-color-pumice {{ {s: 1} | spacingClasses({padding: ['right', 'left']}) }}">
              {{ event.bookingType }}
            </span>
          {% endif %}

          {% if event.isDropIn %}
            <span class="border-left-width-1 border-color-pumice {{ {s: 1} | spacingClasses({padding: ['right', 'left']}) }}">
              Drop-in
            </span>
          {% endif %}
        </div>

        <div class="{{ {s:'HNL4'} | fontClasses }}">
          {% for dateRange in event.times %}
            <div class="border-top-width-1 border-color-pumice {{ {s: 2} | spacingClasses({padding: ['top', 'bottom']}) }}">
              {% set formattedDateRange = dateRange.startDateTime | formatAndDedupeOnDate(dateRange.endDateTime) %}
              <time class="block">
                <b class="{{ {s:'HNM4'} | fontClasses }}">{{ formattedDateRange | joinDateStrings }}</b>
              </time>
              {% if (formattedDateRange.size === 1) %}
                <time class="block">
                  {{ dateRange.startDateTime | formatAndDedupeOnTime(dateRange.endDateTime) | joinDateStrings }}
                </time>
              {% endif %}
            </div>
          {% endfor %}

          {% if eventInfo.eventbriteId %}
            <div class="border-top-width-1 border-color-pumice {{ {s: 2} | spacingClasses({padding: ['top', 'bottom']}) }}">
              <div class="js-eventbrite-ticket-button" data-eventbrite-ticket-id="{{ eventInfo.eventbriteId }}">
                <a class="{{- [
                  'flex-inline',
                  'flex--v-center',
                  'flex--h-center',
                  'btn btn--full-width-s',
                  {s:'HNM4'} | fontClasses,
                  {s: 4} | spacingClasses({padding: ['left', 'right']})
                ].join(' ') }}"
                    href="https://www.eventbrite.com/e/{{ eventInfo.eventbriteId }}/">
                  <span>{% icon 'ticket' %}</span>
                  <span class="js-eventbrite-ticket-button-text">Book free tickets</span>
                </a>
                <p class="{{- [
                  'font-charcoal',
                  {s:'HNL5'} | fontClasses,
                  {s:1} | spacingClasses({margin: ['top']}),
                  {s:0} | spacingClasses({margin: ['bottom']})
                ].join(' ') -}}">with Eventbrite</p>
              </div>
            </div>
          {% endif %}

          {% if event.bookingEnquiryTeam %}
            <div class="border-top-width-1 border-color-pumice {{ {s: 2} | spacingClasses({padding: ['top', 'bottom']}) }}">
              <a class="{{- [
                          {s:'HNM4'} | fontClasses,
                          {s: 4} | spacingClasses({padding: ['left', 'right']})
                        ].join(' ') }} flex-inline flex--h-center btn btn--full-width-s"
                  href="mailto:{{ event.bookingEnquiryTeam.email }}">
                <span>{% icon 'email', null, ['icon--white'] %}</span>
                Email to book
              </a>
              <a class="block font-charcoal {{ {s:'HNL5'} | fontClasses }} {{ {s:1} | spacingClasses({margin: ['top']}) }}"
                  href="mailto:{{ event.bookingEnquiryTeam.email }}">{{ event.bookingEnquiryTeam.email }}</a>
            </div>
          {% endif %}


          {% if not (eventInfo.eventbriteId or event.bookingEnquiryTeam) and event.times.length === 1 %}
            <div class="border-top-width-1 border-color-pumice {{ {s: 2} | spacingClasses({padding: ['top', 'bottom']}) }}">
              <div
                data-track-event="{{ {category: 'component', action: 'add-to-calendar:click', label: 'empty-button'} | dump }}"
                class="{{- [
                {s:'HNM4'} | fontClasses
              ].join(' ') }} flex-inline flex--h-center">
                <span class="{{ {s: 1} | spacingClasses({padding: ['right']}) }}">{% icon 'calendar', null, [''] %}</span>
                Add to calendar
              </div>
              <div class="flex {{ {s: 1} | spacingClasses({padding: ['top']}) }}">
                {% set eventCalendarProps = {
                  url: 'https://wellcomecollection.org/events/' + event.id,
                  startTime: event.times[0].startDateTime,
                  endTime: event.times[0].endDateTime,
                  title: event.title,
                  description: event.description,
                  location: 'Wellcome Collection, 183 Euston Rd, Kings Cross, London NW1 2BE'
                } %}
                <a data-track-event="{{ {category: 'component', action: 'add-to-calendar:click', label: 'calendar:google'} | dump }}"
                   target="_blank" href="{{ eventCalendarProps | googleCal }}"
                   class="{{ {s: 1} | spacingClasses({padding: ['right', 'left']}) }}">Google</a>
                <a data-track-event="{{ {category: 'component', action: 'add-to-calendar:click', label: 'calendar:outlook'} | dump }}"
                   target="_blank" href="{{ eventCalendarProps | outlookCal }}"
                   class="border-left-width-1 border-color-pumice {{ {s: 1} | spacingClasses({padding: ['right', 'left']}) }}">Outlook</a>
                <a data-track-event="{{ {category: 'component', action: 'add-to-calendar:click', label: 'calendar:ical'} | dump }}"
                   target="_blank" href="{{ eventCalendarProps | iCal }}"
                   class="border-left-width-1 border-color-pumice {{ {s: 1} | spacingClasses({padding: ['right', 'left']}) }}">iCal</a>
                <a data-track-event="{{ {category: 'component', action: 'add-to-calendar:click', label: 'calendar:yahoo'} | dump }}"
                   target="_blank" href="{{ eventCalendarProps | yahooCal }}"
                   class="border-left-width-1 border-color-pumice {{ {s: 1} | spacingClasses({padding: ['right', 'left']}) }}">Yahoo</a>
              </div>
            </div>
          {% endif %}
        </div>

        <div class="border-top-width-1 border-color-pumice {{ {s: 2} | spacingClasses({padding: ['top', 'bottom']}) }}">
          {% if event.isDropIn %}
            <h3 class="{{ {s:'HNM4'} | fontClasses }} no-margin">Drop-in</h3>
            <div class="{{ {s:'HNL4'} | fontClasses }} {{ {s:2} | spacingClasses({margin: ['bottom']}) }}">
              <p>
                We try to programme some drop-in events every month.
                There are where activities happen all over the building.
                For these events you just have to turn up, and there is usually
                room for everyone. Doors open 15 minutes prior to the event starting.
              </p>
              <div class="{{ {s:1} | spacingClasses({margin: ['top']}) }}">
                {% componentJsx 'MoreInfoLink', { name: 'View our ticketing policy', url: 'https://wellcomecollection.org/visit-us/events-tickets' } %}
              </div>
            </div>
          {% else %}
            <h3 class="{{ {s:'HNM4'} | fontClasses }} no-margin">First come, first seated</h3>
            <div class="{{ {s:'HNL4'} | fontClasses }} {{ {s:4} | spacingClasses({margin: ['bottom']}) }}">
              <p>
                Please be aware that booking a ticket for a free event does not
                guarantee your place. Admission is on a first come, first served
                basis for ticket-holders.
              </p>
              <div class="{{ {s:1} | spacingClasses({margin: ['top']}) }}">
                {% componentJsx 'MoreInfoLink', { name: 'View our ticketing policy', url: 'https://wellcomecollection.org/visit-us/events-tickets' } %}
              </div>
            </div>
          {% endif %}

          {% if event.bookingInformation %}
            <h3 class="{{ {s:'HNM4'} | fontClasses }}">
              Booking information
            </h3>
            <div class="{{ {s:'HNL4'} | fontClasses }} {{ {s:4} | spacingClasses({margin: ['bottom']}) }}">
              {{ event.bookingInformation | safe }}
            </div>
          {% endif %}

        </div>
      </div>
    </div>

    <div class="css-grid__cell--primary">
      {% if event.promo.image %}
        <div class="is-hidden-s is-hidden-m rounded-corners overflow-hidden">
          {% componentV2 'captioned-image', event.promo.image, {}, {showCopyright: true} %}
        </div>
      {% endif %}
      <div class="{{ {s: 3, m: 4, l: 5, xl: 5} | spacingClasses({margin: ['bottom']}) }}">
        {{ event.description | safe }}
      </div>

      {% if event.format.description %}
        {% componentJsx 'Divider', {
          extraClasses: 'divider--pumice divider--keyline ' + ({s: 1} | spacingClasses({margin: ['top', 'bottom']}))
        } %}
        <h2 class="{{[
          {s:'HNM5', m:'HNM4'} | fontClasses,
          {s: 0} | spacingClasses({margin: ['top']}),
          {s: 1} | spacingClasses({margin: ['bottom']})
        ].join(' ')}}">{{ event.format.title }}</h2>
        <div class="{{[
          {s:'HNL4'} | fontClasses,
          {s:4} | spacingClasses({margin: ['bottom']})
        ].join(' ') }}">{{ event.format.description | safe }}</div>
      {% endif %}

      {% for audience in event.audiences %}
        {% if audience.description %}
          {% componentJsx 'Divider', {
            extraClasses: 'divider--pumice divider--keyline ' + ({s: 1} | spacingClasses({margin: ['top', 'bottom']}))
          } %}
          <h2 class="{{[
            {s:'HNM5', m:'HNM4'} | fontClasses,
            {s: 0} | spacingClasses({margin: ['top']}),
            {s: 1} | spacingClasses({margin: ['bottom']})
          ].join(' ')}}">Part of: {{ audience.title }}</h2>
          <div class="{{[
            {s:'HNL4'} | fontClasses,
            {s:4} | spacingClasses({margin: ['bottom']})
          ].join(' ') }}">{{ audience.description | safe }}</div>
        {% endif %}
      {% endfor %}

      {% for interpretation in event.interpretations %}
        {% if interpretation.interpretationType.description %}
          {% componentJsx 'Divider', {
            extraClasses: 'divider--pumice divider--keyline ' + ({s: 1} | spacingClasses({margin: ['top', 'bottom']}))
          } %}
          <h2 class="{{[
            'flex',
            {s:'HNM5', m:'HNM4'} | fontClasses,
            {s: 0} | spacingClasses({margin: ['top']}),
            {s: 1} | spacingClasses({margin: ['bottom']})
          ].join(' ')}}">
            <span class="{{ {s: 1} | spacingClasses({margin: ['right']}) }}">
              {% icon interpretation.interpretationType.title | replace(' ', '_') | replace('-', '_') | lower %}
            </span>
            <span>{{ interpretation.interpretationType.title }}</span>
          </h2>
          <div class="{{[
            {s:'HNL4'} | fontClasses,
            {s:4} | spacingClasses({margin: ['bottom']})
          ].join(' ') }}">
            {% if interpretation.isPrimary %}
              {{ interpretation.interpretationType.primaryDescription | safe }}
            {% else %}
              {{ interpretation.interpretationType.description | safe }}
            {% endif %}
          </div>
        {% endif %}
      {% endfor %}

      {% for series in event.series %}
        {% componentJsx 'Divider', {
          extraClasses: 'divider--pumice divider--keyline ' + ({s: 1} | spacingClasses({margin: ['top', 'bottom']}))
        } %}
        <h2 class="{{[
          {s:'HNM5', m:'HNM4'} | fontClasses,
          {s: 0} | spacingClasses({margin: ['top']}),
          {s: 1} | spacingClasses({margin: ['bottom']})
        ].join(' ')}}">Part of: {{ series.title }}</h2>
        <div class="{{[
          {s:'HNL4'} | fontClasses,
          {s:4} | spacingClasses({margin: ['bottom']})
        ].join(' ') }}">{{ series.description | safe }}</div>
      {% endfor %}
    </div>
  </div>

</div>

{% endblock %}
